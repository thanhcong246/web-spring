package shopbanhang.Controller.User;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

import shopbanhang.Entity.Users;
import shopbanhang.Service.User.AccountServiceImpl;

@Controller
public class UserController extends BaseController {
	@Autowired
	AccountServiceImpl accountService = new AccountServiceImpl();

	@RequestMapping(value = "/dang-ky", method = RequestMethod.GET)
	public ModelAndView Register() {
		_mvShare.setViewName("user/account/register");
		_mvShare.addObject("user", new Users());
		return _mvShare;
	}

	@RequestMapping(value = "/dang-ky", method = RequestMethod.POST)
	public ModelAndView CreateAcc(@ModelAttribute("user") @Valid Users user, BindingResult bindingResult) {
	    // Kiểm tra xem có lỗi trong các trường không
	    if (bindingResult.hasErrors()) {
	        // Có lỗi, trả về lại trang đăng ký với thông báo lỗi
	        _mvShare.addObject("status", "Đăng ký tài khoản thất bại");
	        _mvShare.setViewName("user/account/register");
	        return _mvShare;
	    }

	    // Kiểm tra xem email đã tồn tại trong database không
	    Users existingUser = accountService.GetUserByEmail(user.getUser());
	    if (existingUser != null) {
	        _mvShare.addObject("status", "Email đã tồn tại trong hệ thống");
	        _mvShare.setViewName("user/account/register");
	        return _mvShare;
	    }

	    int count = accountService.AddAccount(user);
	    if (count > 0) {
	        // Đăng ký thành công, chuyển hướng đến trang đăng nhập
	        return new ModelAndView("redirect:/dang-nhap");
	    } 
	    return _mvShare;
	}

	@RequestMapping(value = "/dang-nhap", method = RequestMethod.GET)
	public ModelAndView Login() {
		_mvShare.setViewName("user/account/login");
		_mvShare.addObject("user", new Users());
		return _mvShare;
	}

	@RequestMapping(value = "/dang-nhap", method = RequestMethod.POST)
	public ModelAndView Login(HttpSession session, @ModelAttribute("user") Users user) {
		user = accountService.CheckAccount(user);
		if (user != null) {
			_mvShare.setViewName("redirect:/");
			session.setAttribute("LoginInfo", user);
		} else {
			_mvShare.addObject("statusLogin", "Đăng nhập thất bại");
		}
		return _mvShare;
	}

	@RequestMapping(value = "/dang-xuat", method = RequestMethod.GET)
	public String Login(HttpSession session, HttpServletRequest request) {
		session.removeAttribute("LoginInfo");
		return "redirect:" + request.getHeader("Referer");
	}

}
